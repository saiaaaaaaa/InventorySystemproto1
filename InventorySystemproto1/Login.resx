<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="guna2PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>